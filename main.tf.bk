module "vpc" {
  source = "./modules/vpc"
  vpc_name = var.vpc
  subnet_name = var.subnet
  region = var.region
  network = var.vpc
  ip_cidr_range = var.vpc_cidr
  project = var.project_id
  firewall_name = var.firewall_name
}

module "sa" {
  source = "./modules/sa"
  account_id = var.account_id
  display_name = var.account_id
  project = var.project_id
}

module "registry" {
  source = "./modules/registry"
  project = var.project_id
  location      = var.region
  repository_id = "my-repository-$(var.region)"
  format        = "DOCKER"
}

module "instance" {
  source = "./modules/instance"
  instance_name         = var.jumphost_name
  machine_type = "e2-medium"
  zone             = var.cluster_location 
  tags         = ["rhel"]
 
  boot_disk {
    initialize_params {
      image = "rhel-cloud/rhel-9"
    }
  }

  network_interface {
    network = var.vpc
   subnetwork        = var.subnet
    access_config {
    }
  }
}

module "gke" {
  source                   = "./modules/gke"
  cluster_name             = var.cluster_name
  location                 = var.cluster_location
  network                  = var.vpc
  subnetwork                   = var.subnet
  remove_default_node_pool = true ## create the smallest possible default node pool and immediately delete it.
  initial_node_count = 1

  private_cluster_config {
    enable_private_endpoint = true
    enable_private_nodes    = true
    master_ipv4_cidr_block  = "10.13.0.0/28"
  }
  ip_allocation_policy {
    cluster_ipv4_cidr_block  = "10.11.0.0/21"
    services_ipv4_cidr_block = "10.12.0.0/21"
  }
  master_authorized_networks_config {
    cidr_blocks {
      cidr_block   = "10.0.0.7/32"
      display_name = "net1"
    }

  }


# Create managed node pool
  nodepool_name       = "nodepool_$(var.cluster_name)"
  nodepool_location   = var.cluster_location
  cluster    = var.cluster_name
  node_count = 3
  node_config {
    oauth_scopes = [
      "https://www.googleapis.com/auth/logging.write",
      "https://www.googleapis.com/auth/monitoring",
    ]

    labels = {
      env = "dev"
    }

    machine_type = "e2-medium"
    disk_size_gb   = 30
    preemptible  = true

    metadata = {
      disable-legacy-endpoints = "true"
    }
  }
}
